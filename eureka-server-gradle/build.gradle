buildscript {
    ext {
        springBootVersion = '2.0.5.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'se.transmode.gradle:gradle-docker:1.2'
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.6.2"
    }

}

apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'docker'
apply plugin: 'org.sonarqube'

group = 'org.banco.server'
version = '1.0.0'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}


ext {
	springCloudVersion = 'Finchley.BUILD-SNAPSHOT'
}

dependencies {
	compile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-server')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

docker {
    baseImage "openjdk:8u171-jdk-alpine3.8"
}

task dockerImage(type: Docker, dependsOn: 'build') {
    group 'build'
    applicationName = "${rootProject.name}".toLowerCase()
    exposePort 9052
    addFile("build/libs/${rootProject.name}-${version}.jar","/tmp")
    workingDir("/tmp")
    entryPoint(["java","-jar","${rootProject.name}-${version}.jar"])
}
